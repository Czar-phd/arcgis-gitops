name: arcgis-enterprise-base-aws-backup

on: 
  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * *'
      
env:
  TERRAFORM_VERSION: 1.5.7
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_BACKEND_S3_BUCKET: ${{ vars.TERRAFORM_BACKEND_S3_BUCKET }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  PYTHONPATH: ${{ github.workspace }}/aws/scripts
  PLATFORM: ${{ vars.PLATFORM || 'windows' }}

concurrency:
  group: ${{ github.ref_name }}

jobs:
  application:
    name: arcgis-enterprise-base/backup
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: aws/arcgis-enterprise-base/${{ env.PLATFORM }}/backup
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
          terraform_version: $TERRAFORM_VERSION
          terraform_wrapper: false
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
    - name: Install boto3
      id: install-boto3
      run: pip install boto3
    - name: Terraform Init
      id: init
      run: |
        SITE_ID=$(jq -r '.site_id' ../config/backup.tfvars.json)
        DEPLOYMENT_ID=$(jq -r '.deployment_id' ../config/backup.tfvars.json)
        terraform init -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" -backend-config="key=$SITE_ID/aws/$DEPLOYMENT_ID/backup.tfstate" -backend-config="region=$AWS_DEFAULT_REGION"
    - name: Terraform Apply
      id: apply
      run: terraform apply -var-file ../config/backup.tfvars.json -auto-approve
