name: enterprise-k8s-aws-image

on: 
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  CONTAINER_REGISTRY_USER: ${{ secrets.CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  CONFIG_FILE: ${{ github.workspace }}/config/aws/arcgis-enterprise-k8s/image.vars.json

concurrency:
  group: ${{ github.ref_name }}
  
jobs:
  image:
    name: Copy Container Images to ECR
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: aws/arcgis-enterprise-k8s/image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Clean up space
        run: |
          # Clean up space for the image copy
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          docker rmi node:16 node:18 node:20 > /dev/null 2>&1
      - name: Copy Docker Hub images
        run: |
          ARCGIS_VERSION=$(jq -r '.arcgis_version' $CONFIG_FILE)
          export CONTAINER_REGISTRY_ORG=$(jq -r '.container_registry_org' $CONFIG_FILE)
          export ECR_REPOSITORY_PREFIX=$(jq -r '.ecr_repository_prefix' $CONFIG_FILE)
          echo "ArcGIS Enterprise version: $ARCGIS_VERSION"
          echo "Container registry org: $CONTAINER_REGISTRY_ORG"
          echo "ECR repository prefix: $ECR_REPOSITORY_PREFIX"
          MANIFEST_PATH=./manifests/$ARCGIS_VERSION.dat
          chmod +x ./copy-docker-hub-images.sh
          ./copy-docker-hub-images.sh $MANIFEST_PATH
      - name: Copy Public ECR images
        run: |
          chmod +x ./copy-public-ecr-images.sh
          ./copy-public-ecr-images.sh
  