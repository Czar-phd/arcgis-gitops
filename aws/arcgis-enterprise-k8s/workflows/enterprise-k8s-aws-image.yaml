# Copyright 2024 Esri
#
# Licensed under the Apache License Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: enterprise-k8s-aws-image

on: 
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  CONTAINER_REGISTRY_USER: ${{ secrets.CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  CONFIG_FILE: ${{ github.workspace }}/config/aws/arcgis-enterprise-k8s/image.vars.json
  ADMIN_CLI_METADATA_FILE: ${{ github.workspace }}/enterprise-admin-cli/metadata.json

concurrency:
  group: ${{ github.ref_name }}
  
jobs:
  image:
    name: Copy Container Images to ECR
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: aws/arcgis-enterprise-k8s/image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Clean up space
        run: |
          # Clean up space for the image copy
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          docker rmi node:16 node:18 node:20 > /dev/null 2>&1
      - name: Copy Docker Hub images
        run: |
          PULL_THROUGH_CACHE=$(jq -r '.pull_through_cache' $CONFIG_FILE)
          if [ "$PULL_THROUGH_CACHE" == "true" ]; then
            echo "Skip copying Docker Hub images because pull through cache is enabled."
          else
            ARCGIS_VERSION=$(jq -r '.arcgis_version' $CONFIG_FILE)
            export CONTAINER_REGISTRY_ORG=$(jq -r '.container_registry_org' $CONFIG_FILE)
            export ECR_REPOSITORY_PREFIX=$(jq -r '.ecr_repository_prefix' $CONFIG_FILE)
            echo "ArcGIS Enterprise version: $ARCGIS_VERSION"
            echo "Container registry org: $CONTAINER_REGISTRY_ORG"
            echo "ECR repository prefix: $ECR_REPOSITORY_PREFIX"
            MANIFEST_PATH=./manifests/$ARCGIS_VERSION.dat
            chmod +x ./copy-docker-hub-images.sh
            ./copy-docker-hub-images.sh $MANIFEST_PATH $ARCGIS_VERSION
          fi
      - name: Build Admin CLI Image
        run: |
          ADMIN_CLI_VERSION=$(jq -r '.version' $ADMIN_CLI_METADATA_FILE)
          chmod +x ./build-admin-cli-image.sh
          ./build-admin-cli-image.sh enterprise-admin-cli $ADMIN_CLI_VERSION ${{ github.workspace }}/enterprise-admin-cli
  