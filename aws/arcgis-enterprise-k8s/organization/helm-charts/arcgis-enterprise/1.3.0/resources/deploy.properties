
HELM_DEPLOY=true

K8S_NAMESPACE="{{ .Release.Namespace }}"
ARCGIS_SITENAME="{{ .Release.Name }}"

ARCGIS_ENTERPRISE_FQDN="{{ .Values.install.enterpriseFQDN | required "Value install.enterpriseFQDN is required." }}"
CONTEXT="{{ .Values.install.context | required "Value install.context is required." }}"
ROOT_ORG_BASE_URL="https://${ARCGIS_ENTERPRISE_FQDN}/${CONTEXT}/"
K8S_CLUSTER_DOMAIN="{{ .Values.install.k8sClusterDomain | default "cluster.local" }}"
K8S_AVAILABILITY_TOPOLOGY_KEY="{{ .Values.install.k8sAvailabilityTopologyKey | default "kubernetes.io/hostname" }}"

REGISTRY_HOST="{{ .Values.image.registry | required "Value image.registry is required." }}"
REGISTRY_REPO="{{ .Values.image.repository }}"

{{- if .Values.image.repository }}
CONTAINER_REGISTRY="${REGISTRY_HOST}/${REGISTRY_REPO}"
{{- else }}
CONTAINER_REGISTRY="${REGISTRY_HOST}"
{{- end }}

CONTAINER_REGISTRY_USERNAME="{{ .Values.image.username | required "Value image.username is required." }}"
CONTAINER_REGISTRY_PASSWORD="{{ .Values.image.password | required "Value image.password is required." }}"
CONTAINER_IMAGE_PULL_SECRET_NAME="${ARCGIS_SITENAME}-container-registry"
VERSION_TAG="{{ .Values.image.tag | required "Value image.tag is required." }}"

INGRESS_TYPE="{{ .Values.install.ingress.ingressType | required "Value install.ingress.ingressType is required." }}"
LOAD_BALANCER_TYPE="{{ .Values.install.ingress.loadBalancerType }}"
LOAD_BALANCER_IP="{{ .Values.install.ingress.loadBalancerIP }}"
INGRESS_SERVICE_USE_CLUSTER_IP="{{ .Values.install.ingress.ingressServiceUseClusterIP }}"
ALLOWED_PRIVILEGED_CONTAINERS="{{ .Values.install.allowedPrivilegedContainers }}"
NODE_PORT_HTTPS="{{ .Values.install.ingress.nodePortHttps }}"
INGRESS_SERVER_TLS_SECRET="{{ .Values.install.ingress.tls.secretName }}"
INGRESS_SERVER_TLS_PFX_FILE=""
INGRESS_SERVER_TLS_PFX_PSSWD=""
INGRESS_SERVER_TLS_KEY_FILE=""
INGRESS_SERVER_TLS_CRT_FILE=""
INGRESS_SERVER_TLS_SELF_SIGN_CN="{{ .Values.install.ingress.tls.selfSignCN }}"
INGRESS_HSTS_ENABLED="{{ .Values.install.ingress.hstsEnabled }}"
INGRESS_SSL_PROTOCOLS="{{ .Values.install.ingress.sslProtocols }}"
INGRESS_SSL_CIPHERS="{{ .Values.install.ingress.sslCiphers }}"

HELM_CONFIGURE_WAIT_TIME_MIN="{{ .Values.install.configureWaitTimeMin }}"

{{ range $index, $value := .Values.install.ingress.customAnnotations }}
  {{- if $value -}}
    {{- printf "INGRESS_CUSTOM_ANNOTATION%d=%s\n" $index ( $value | squote ) -}}
  {{- end -}}
{{ end }}

# Hard-coded
{{- if .Values.install.clusterIngressControllerYamlFilename }}
CLUSTER_INGRESS_CONTROLLER_YAML_FILENAME="/tmp/layer7.ingress.yaml"
{{- else }}
CLUSTER_INGRESS_CONTROLLER_YAML_FILENAME=""
{{- end }}
