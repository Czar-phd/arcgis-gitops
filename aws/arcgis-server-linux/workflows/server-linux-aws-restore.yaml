# Copyright 2024 Esri
#
# Licensed under the Apache License Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: server-linux-aws-restore

on: 
  workflow_dispatch:
      
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_BACKEND_S3_BUCKET: ${{ vars.TERRAFORM_BACKEND_S3_BUCKET }}
  TF_VAR_aws_region: ${{ vars.AWS_DEFAULT_REGION }}
  PYTHONPATH: ${{ github.workspace }}/aws/scripts
  CONFIG_FILE: ${{ github.workspace }}/config/aws/arcgis-server-linux/restore.tfvars.json

concurrency:
  group: ${{ github.ref_name }}

jobs:
  restore:
    name: Restore from Backup
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: aws/arcgis-server-linux/restore
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Boto3 and Ansible
      id: install-boto3
      run: |
        pip install boto3
        pip install "ansible>=9.0,<10.0"
    - name: Install Ansible Collections
      id: install-collections
      run: ansible-galaxy collection install ${{ github.workspace }}/ansible_collections/arcgis -p /usr/share/ansible/collections
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.10.0"
    - name: Run Terraform
      id: terraform
      run: |
        SITE_ID=$(jq -r '.site_id' $CONFIG_FILE)
        DEPLOYMENT_ID=$(jq -r '.deployment_id' $CONFIG_FILE)
        terraform init -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" -backend-config="key=$SITE_ID/aws/$DEPLOYMENT_ID/restore.tfstate" -backend-config="region=$TF_VAR_aws_region"
        terraform apply -var-file $CONFIG_FILE -auto-approve
