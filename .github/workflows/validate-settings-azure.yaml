# Copyright 2024 Esri
#
# Licensed under the Apache License Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: validate-settings-azure

on: 
  workflow_dispatch:

env:
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  TERRAFORM_BACKEND_STORAGE_ACCOUNT_NAME: ${{ vars.TERRAFORM_BACKEND_STORAGE_ACCOUNT_NAME }}
  TERRAFORM_BACKEND_CONTAINER_NAME: ${{ vars.TERRAFORM_BACKEND_CONTAINER_NAME }}
  ARCGIS_ONLINE_USERNAME: ${{ secrets.ARCGIS_ONLINE_USERNAME }}
  ARCGIS_ONLINE_PASSWORD: ${{ secrets.ARCGIS_ONLINE_PASSWORD }}
  CONTAINER_REGISTRY_USER: ${{ secrets.CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  PYTHONPATH: ${{ github.workspace }}/azure/scripts

jobs:
  validate_settings_aws:
    name: Validate GitHub Actions secrets and variables
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
    - name: Install python packages
      run: pip install azure-storage-blob azure-identity
    - name: Test Azure credentials
      run: python -m test_azure_credentials -a $TERRAFORM_BACKEND_STORAGE_ACCOUNT_NAME -c $TERRAFORM_BACKEND_CONTAINER_NAME
    - name: Test ArcGIS Online credentials
      run: python -m token_service_client 
    - name: Test Docker Hub credentials
      if: ${{ env.CONTAINER_REGISTRY_USER }} 
      run: echo $CONTAINER_REGISTRY_PASSWORD | docker login --username $CONTAINER_REGISTRY_USER --password-stdin
